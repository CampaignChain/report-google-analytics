{#
This file is part of the CampaignChain package.

(c) CampaignChain Inc. <info@campaignchain.com>

For the full copyright and license information,  view the LICENSE
file that was distributed with this source code.
#}

{% extends 'CampaignChainCoreBundle:Base:base.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    {% javascripts '@flot_js' combine=true %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    {% javascripts '@flot_comments_js' %}
    <!-- flot comments --><script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    {% javascripts '@flot_tooltip_js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {% stylesheets '@select2_css' combine=true %}
    <link href="{{ asset_url }}" type="text/css" rel="stylesheet" />
    {% endstylesheets %}
    {% stylesheets '@campaignchain_flot_css' filter="cssrewrite" output="media/css/*.css"
    'bundles/campaignchaincore/css/*'%}
    <link href="{{ asset_url }}" type="text/css" rel="stylesheet" />
    {% endstylesheets %}
{% endblock %}

{% block body %}
    {% javascripts '@select2_js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

    {% if report_data is defined and report_data is iterable %}
        {# // The series point styles available with Flot. #}
            <form method="POST" class="form-inline" role="form" enctype="multipart/form-data">
                {{ bootstrap_set_style('inline') }}
                {#{{ bootstrap_set_widget_col(6) }}#}
                {#{{ bootstrap_set_label_col(2) }} #}
                {#{{ form_widget(formMetrics) }}#}
                {{ form_row(formMetrics.metrics, {'style': 'horizontal', 'label_col': 2, 'widget_col': 10 }) }}
                {{ form_row(formMetrics.segment, {'style': 'horizontal', 'label_col': 2, 'widget_col': 10 }) }}
                {{ form_rest(formMetrics) }}
                <button class="btn btn-primary" type="submit"><i class="fa fa-area-chart"></i> Show</button>
            </form>

        {#{% block form_footer %}{% endblock %}#}




        {#{% set flot_styles = { 0: 'circle', 1: 'square', 2: 'diamond', 3: 'triangle', 4:'cross' } %}#}

        <script type="text/javascript">


            $(document).ready(function() {

                // Put milestones on top of chart
                var pos = $('.campaignchain-flot').position();
                $('.jquery-flot-comment').css({'top': 0});

                function updateLegendData(pos) {
                    plots = new Array();
                    plots.push(plot_ga);
                    {% if fact_data is defined and fact_data is iterable %}
                    {% for fact in fact_data %}
                    plots.push(plot_{{ fact.label | lower }});
                    {% endfor %}
                    {% endif %}
                    updateLegendTimeout = null;

                    plots.forEach(function(entry) {

                        var yval = '';
                        var i, j,  dataset = entry.getData();
                        for (i = 0; i < dataset.length; ++i) {
                            var series = dataset[i];

                            // Find the nearest points, x-wise

                            for (j = 0; j < series.data.length; ++j) {
                                if (series.data[j][0] > pos.x) {
                                    break;
                                }
                            }

                            // Now Interpolate

                            var y,
                                    p1 = series.data[j - 1],
                                    p2 = series.data[j];
                            if (p1 == null) {
                                y = 0;
                            } else if (p2 == null) {
                                y = p1[1];
                            } else {
                                y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);
                            }

                            var o = entry.pointOffset({
                                x: pos.x,
                                y: y,
                            });

                            $canvas = $(entry.getCanvas());
                            yval = yval + entry.getData()[i].label + ':' + y.toFixed(2) + ', ';
                            $canvas.parent().find('.legendLabel').eq(i).text(entry.getData()[i].label + ': ' + y.toFixed(2));

                        }

                    });

                }

                plot_ga = $.plot("#placeholder_ga", {{ report_data|json_encode()|raw  }}, {
                    crosshair: { mode: "x" },
                    grid: {
                        show: true,
                        markingsLineWidth: 1,
                        hoverable: true
                    },
                    xaxis: {
                        mode: "time",
                        tickSize: [7, "day"],
                        min: (new Date('{{ start_date }}')).getTime(),
                        max: (new Date('{{ end_date }}')).getTime()
                    },
                    yaxis: {
                        min: 0,
                        autoscaleMargin: 0.4,
                    },
                    lines: {
                        show: true
                    },
                    points: {
                        show: false,
                        radius: 3
                    },
                    tooltip: {
                        show: false,
                       cssClass: 'ga'
                    },
                    tooltipOpts: {
                       xDateFormat:    '%a, %b %e, %Y',
                     content:        "<label>%x</label><br/>%s: %y"
                    },
                    legend: {
                        show: true,
                        position: "nw",
                        noColumns: 1,
                        placement: 'outsideGrid'
                    }
//                        colors: ["#31708F"],
                })


                //Iterate over all fact metrics and plot them
                {% if fact_data is defined and fact_data is iterable %}
                {% for fact in fact_data %}
                plot_{{ fact.label | lower }} = $.plot("#placeholder_facts_{{ fact.label | lower }}", [{{ fact|json_encode()|raw  }}], {
                    crosshair: { mode: "x" },
                    grid: {
                        show: true,
                        markingsLineWidth: 1,
                        hoverable: true
                    },
                    series: {
                        lines: { show: true, colors: "#000", fill: true, fillColor: '#eee' },
                        points: { show: true, colors: '#000' },
                    },
                    xaxis: {
                        mode: "time",
                        tickSize: [7, "day"],
                        min: (new Date('{{ start_date }}')).getTime(),
                        max: (new Date('{{ end_date }}')).getTime()
                    },
                    yaxis: {
                        min: 0,
                        autoscaleMargin: 0.4,
                    },
                    tooltip: {
                        show: false,
                        cssClass: '{{ fact.label | lower }}'
                    },
                    tooltipOpts: {
                      xDateFormat:    '%a, %b %e, %Y',
                        content:        "<label>%x</label><br/>%s: %y"
                    },
                    legend: {
                        show: true,
                        position: "nw",
                        noColumns: 1,
                        placement: 'outsideGrid'
                    },
                    points: {
                        show: false,
                        radius: 3
                    },
                    //colors: ["#31708F"],
                });


                $("#placeholder_facts_{{ fact.label | lower }}").bind("plothover",  function (event, pos, item)
                {
                    updateLegendData(pos);

                    plot_ga.setCrosshair({x: pos.x});
                    {% for fact_node in fact_data %}
                    plot_{{ fact_node.label | lower }}.setCrosshair({x: pos.x});
                    {% endfor %}

                });
                //Remove crosshair in all graphs when leaving one of them
                $("#placeholder_ga").mouseleave(function() {
                    plot_{{ fact.label | lower }}.clearCrosshair();
                });
                $("#placeholder_facts_{{ fact.label | lower }}").mouseleave(function() {
                    plot_ga.clearCrosshair();
                    {% for fact_node in fact_data %}
                    plot_{{ fact_node.label | lower }}.clearCrosshair();
                    {% endfor %}

                });

                {% endfor %}
                {% endif %}

                //Draw crosshair in all graphs when entering one of them
                $("#placeholder_ga").bind("plothover",  function (event, pos, item)
                {
                    updateLegendData(pos);

                    {% for fact_node in fact_data %}
                        plot_{{ fact_node.label | lower }}.setCrosshair({x: pos.x})
                    {% endfor %}

                });

            });

        </script>


        <div class="row-fluid">
            <div class="span12">
                <h1>Google Analytics</h1>
                <div id="placeholder_ga" style="width:100%;height:300px;" class="campaignchain-flot">
                </div>
                <br>
                {% for fact in fact_data %}
                    {{ fact.channel|campaignchain_tpl_teaser({ label: fact.channel.name ~ ' - ' ~ fact.label}) }}
                    {#<h2 style="display: inline-block; vertical-align: middle">{{ fact.channel.name ~ ' - ' ~ fact.label}}</h2>#}
                <div id="placeholder_facts_{{ fact.label | lower}}" style="width:100%;height:300px;" class="campaignchain-flot"></div>
                {% endfor %}
            </div>
        </div>

    {% endif %}
{% endblock %}